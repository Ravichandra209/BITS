package graphs;

import java.util.LinkedList;
import graphs.GraphAdjacencyList2.*;
import queues.Queue;

public  class BreadthFirstSearch {
	String color;
	int distance ,parent;
	int restVertices[] ;
	
	BreadthFirstSearch(Graph graph,int source){
		 this.color ="white";
		 this.distance =999 ; //set some higher distance her infinity represented by 999
		 this.parent = -1 ; // Nil represented by -1 
		 restVertices =new int[graph.v-1];
		 
		for(int v =1 ,j=0 ;  j < graph.v-1 && graph.v != source; v++,j++) {
				this.restVertices[j] =v;
		}
	}
	public  void sourceAttributes(int source){
		this.color = "gray" ;
		this.distance = 0;
		this.parent = -1 ;
	}
	
	public void BreadthFirst(Graph graph ,int source) {
		//set the source attributes 
		sourceAttributes(source);
		
		// Create a queue for BFS 
        //LinkedList<Integer> queue = new LinkedList<Integer>();
        Queue que = new Queue(graph.v);
        	que.enqueue(source);
        	
        	while(que.isEmpty(que)) {
        		
        	}
	}
	
}
